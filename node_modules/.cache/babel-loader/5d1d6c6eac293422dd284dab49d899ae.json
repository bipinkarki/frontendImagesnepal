{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\web final\\\\t1---frontend-RoshniDahal\\\\src\\\\components\\\\Profile\\\\Signup.js\";\nimport React from \"react\";\nimport \"./Profile.css\";\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Signup extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"lalit\",\n      lastName: \"\",\n      firstName: \"\",\n      phone: \"\",\n      address: \"\",\n      password: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(this.lastName.value);\n    const body = {\n      email: this.email.value,\n      username: this.username.value,\n      lastName: this.lastName.value,\n      firstName: this.firstName.value,\n      phone: this.phone.value,\n      address: this.address.value,\n      password: this.password.value\n    };\n    axios.post(`http://localhost:4000/users/register`, {\n      body\n    }).then(res => {\n      alert(\"form submitted\");\n      this.props.history.push(\"/submitted\");\n    }).catch(err => {\n      alert(\"Username already taken\");\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            style: {\n              width: \"70%\",\n              margin: \"auto\",\n              border: \"2px solid grey\",\n              padding: \"30px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Signup Here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Enter email\",\n                ref: email => this.email = email,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"We'll never share your email with anyone else.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"username\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"chose Username\",\n                ref: username => this.username = username,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"firstName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"First Name\",\n                ref: firstName => this.firstName = firstName,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"lastName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Last Name\",\n                ref: lastName => this.lastName = lastName,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"address\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Address\",\n                ref: address => this.address = address,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"phone\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                placeholder: \"Phone\",\n                ref: phone => this.phone = phone,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Password\",\n                ref: password => this.password = password,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Signup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Signup);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/user/Desktop/web final/t1---frontend-RoshniDahal/src/components/Profile/Signup.js"],"names":["React","Form","Button","Container","axios","withRouter","Signup","Component","constructor","state","email","lastName","firstName","phone","address","password","handleSubmit","bind","event","preventDefault","console","log","value","body","username","post","then","res","alert","props","history","push","catch","err","render","width","margin","border","padding"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./Profile.css\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nclass Signup extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"lalit\",\r\n      lastName: \"\",\r\n      firstName: \"\",\r\n      phone: \"\",\r\n      address: \"\",\r\n      password: \"\"\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(this.lastName.value);\r\n    const body = {\r\n      email: this.email.value,\r\n      username: this.username.value,\r\n      lastName: this.lastName.value,\r\n      firstName: this.firstName.value,\r\n      phone: this.phone.value,\r\n      address: this.address.value,\r\n      password: this.password.value\r\n    };\r\n\r\n    axios\r\n      .post(`http://localhost:4000/users/register`, { body })\r\n      .then(res => {\r\n        alert(\"form submitted\");\r\n        this.props.history.push(\"/submitted\");\r\n      })\r\n      .catch(err => {\r\n        alert(\"Username already taken\");\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container className=\"\">\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <fieldset\r\n              style={{\r\n                width: \"70%\",\r\n                margin: \"auto\",\r\n                border: \"2px solid grey\",\r\n                padding: \"30px\"\r\n              }}\r\n            >\r\n              <h3>Signup Here</h3>\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  ref={email => (this.email = email)}\r\n                  required\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  We'll never share your email with anyone else.\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"username\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"chose Username\"\r\n                  ref={username => (this.username = username)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"firstName\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"First Name\"\r\n                  ref={firstName => (this.firstName = firstName)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"lastName\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Last Name\"\r\n                  ref={lastName => (this.lastName = lastName)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"address\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Address\"\r\n                  ref={address => (this.address = address)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"phone\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  placeholder=\"Phone\"\r\n                  ref={phone => (this.phone = phone)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  ref={password => (this.password = password)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Signup\r\n              </Button>\r\n            </fieldset>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Signup);\r\n"]},"metadata":{},"sourceType":"module"}